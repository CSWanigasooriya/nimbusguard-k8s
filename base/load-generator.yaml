apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-generator
  labels:
    app: load-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: load-generator
  template:
    metadata:
      labels:
        app: load-generator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: generator
        image: nimbusguard/load-generator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: metrics
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: TARGET_URL
          value: "http://consumer-workload:8080"
        - name: REQUEST_RATE
          value: "10"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo:4317"
        - name: OTEL_SERVICE_NAME
          value: "load-generator"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=load-generator,service.version=1.0.0"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: load-generator
  labels:
    app: load-generator
spec:
  selector:
    app: load-generator
    app.kubernetes.io/component: operator
    app.kubernetes.io/name: nimbusguard
    app.kubernetes.io/part-of: nimbusguard
  ports:
  - name: http
    port: 8081
    targetPort: 8081
    protocol: TCP
  type: ClusterIP
