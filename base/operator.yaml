apiVersion: v1
kind: ServiceAccount
metadata:
  name: nimbusguard-operator
  namespace: nimbusguard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nimbusguard-operator
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["nimbusguard.io"]
  resources: ["intelligentscaling"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nimbusguard-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nimbusguard-operator
subjects:
- kind: ServiceAccount
  name: nimbusguard-operator
  namespace: nimbusguard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: operator-config
  namespace: nimbusguard
data:
  prometheus_url: "http://prometheus:9090"
  tempo_endpoint: "http://tempo:4317"
  log_level: "INFO"
  evaluation_interval: "30"
---
apiVersion: v1
kind: Secret
metadata:
  name: operator-secrets
  namespace: nimbusguard
type: Opaque
stringData:
  openai_api_key: ""  # Will be set during deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nimbusguard-operator
  namespace: nimbusguard
  labels:
    app: nimbusguard-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nimbusguard-operator
  template:
    metadata:
      labels:
        app: nimbusguard-operator
    spec:
      serviceAccountName: nimbusguard-operator
      containers:
      - name: operator
        image: nimbusguard-operator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8000
          name: metrics
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: operator-secrets
              key: openai_api_key
        - name: PROMETHEUS_URL
          value: "http://prometheus-server.monitoring.svc.cluster.local:9090"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: ""  # Disable OpenTelemetry since Tempo is not available
      volumes:
      - name: config
        configMap:
          name: operator-config
---
apiVersion: v1
kind: Service
metadata:
  name: nimbusguard-operator
  namespace: nimbusguard
  labels:
    app: nimbusguard-operator
spec:
  selector:
    app: nimbusguard-operator
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: intelligentscaling.nimbusguard.io
spec:
  group: nimbusguard.io
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              namespace:
                type: string
              target_labels:
                type: object
                additionalProperties:
                  type: string
              metrics_config:
                type: object
                properties:
                  prometheus_url:
                    type: string
                    default: "http://prometheus:9090"
                  evaluation_interval:
                    type: integer
                    default: 30
                  decision_window:
                    type: string
                    default: "5m"
                  trace_decisions:
                    type: boolean
                    default: true
                  metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        query:
                          type: string
                        threshold:
                          type: number
                        condition:
                          type: string
                          enum: ["gt", "lt", "eq", "ne", "gte", "lte"]
                          default: "gt"
                      required:
                      - query
                      - threshold
                  action_config:
                    type: object
                    additionalProperties: true
                required:
                - prometheus_url
                - metrics
              decision_engine:
                type: string
                default: "langgraph"
            required:
            - namespace
            - target_labels  
            - metrics_config
          status:
            type: object
            properties:
              last_evaluation:
                type: string
                format: date-time
              current_metrics:
                type: object
                additionalProperties:
                  type: number
              last_action:
                type: string
              decisions_made:
                type: integer
                default: 0
              trace_id:
                type: string
  scope: Namespaced
  names:
    plural: intelligentscaling
    singular: intelligentscaling
    kind: IntelligentScaling 