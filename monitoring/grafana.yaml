apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yml: |
    apiVersion: 1
    deleteDatasources:
      - name: Prometheus
        orgId: 1
      - name: Loki
        orgId: 1
      - name: Tempo
        orgId: 1
    datasources:
      # --- Prometheus Datasource ---
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
        editable: false
        uid: prometheus_nimbusguard
        jsonData:
          httpMethod: GET

      # --- Loki Datasource ---
      - name: Loki
        type: loki
        access: proxy
        orgId: 1
        url: http://loki.monitoring.svc.cluster.local:3100
        editable: false
        uid: loki_nimbusguard
        jsonData:
          derivedFields:
            - datasourceUid: tempo_nimbusguard
              matcherRegex: "traceID=(\\w+)"
              name: TraceID
              url: "$${__value.raw}"
            - datasourceUid: tempo_nimbusguard
              matcherRegex: "trace_id=(\\w+)"
              name: TraceID
              url: "$${__value.raw}"

      # --- Tempo Datasource ---
      - name: Tempo
        type: tempo
        access: proxy
        orgId: 1
        url: http://tempo.monitoring.svc.cluster.local:3200
        editable: false
        uid: tempo_nimbusguard
        jsonData:
          httpMethod: GET
          serviceMap:
            datasourceUid: prometheus_nimbusguard
          nodeGraph:
            enabled: true
          search:
            hide: false
          lokiSearch:
            datasourceUid: loki_nimbusguard
          tracesToLogs:
            datasourceUid: loki_nimbusguard
            tags: ['job', 'instance', 'pod', 'namespace']
            mappedTags: [
              {key: 'service.name', value: 'job'},
              {key: 'k8s.pod.name', value: 'pod'},
              {key: 'k8s.namespace.name', value: 'namespace'}
            ]
            mapTagNamesEnabled: true
            spanStartTimeShift: '1h'
            spanEndTimeShift: '1h'
          tracesToMetrics:
            datasourceUid: prometheus_nimbusguard
            tags: ['job', 'instance']
            queries:
              - name: 'Sample query'
                query: 'rate(tempo_request_duration_seconds_sum[5m])'
          spanBar:
            type: 'Tag'
            tag: 'http.path'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    
    [grafana_net]
    url = https://grafana.net
    
    [log]
    mode = console
    level = info
    
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    
    [server]
    protocol = http
    http_port = 3000
    domain = localhost
    
    [feature_toggles]
    enable = traceqlEditor,correlations,tempoSearch,tempoServiceGraph
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:12.0.2
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-config
              subPath: grafana.ini
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: traceqlEditor,correlations,tempoSearch,tempoServiceGraph
      volumes:
        - name: grafana-pv
          emptyDir: { }
        - name: grafana-config
          configMap:
            defaultMode: 420
            name: grafana-config
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  type: ClusterIP
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
