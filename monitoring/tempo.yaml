apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
  namespace: monitoring
data:
  tempo.yml: |
    server:
      http_listen_port: 3200
      log_level: info

    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318

    ingester:
      trace_idle_period: 10s
      max_block_duration: 5m

    compactor:
      compaction:
        block_retention: 1h

    storage:
      trace:
        backend: local
        wal:
          path: /tmp/tempo/wal
        local:
          path: /tmp/tempo/blocks
          
    # Enable metrics
    metrics_generator:
      registry:
        external_labels:
          source: tempo
          cluster: nimbusguard
      storage:
        path: /tmp/tempo/generator/wal
        remote_write:
          - url: http://prometheus.monitoring.svc.cluster.local:9090/api/v1/write
            send_exemplars: true
      # Enable service graph metrics
      processor:
        service_graphs:
          dimensions:
            - http.method
            - http.target
            - http.status_code
            - service.version
          histogram_buckets: [0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8]
          max_items: 10000
          wait: 10s
          workers: 10
        span_metrics:
          dimensions:
            - http.method
            - http.target
            - http.status_code
            - service.version
          histogram_buckets: [0.002, 0.005, 0.01, 0.025, 0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1.0, 2.5, 5.0, 7.5, 10.0]
          enable_target_info: true
            
    # Query frontend for better performance
    query_frontend:
      search:
        duration_slo: 5s
        throughput_bytes_slo: 1.073741824e+09
      trace_by_id:
        duration_slo: 5s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3200"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:2.7.2
          args:
            - '-config.file=/etc/tempo/tempo.yml'
          ports:
            - containerPort: 3200
              name: http
            - containerPort: 4317
              name: otlp-grpc
            - containerPort: 4318
              name: otlp-http
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo
            - name: tempo-storage
              mountPath: /tmp/tempo
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /ready
              port: 3200
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              path: /ready
              port: 3200
            initialDelaySeconds: 45
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config
        - name: tempo-storage
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app: tempo
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3200"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: tempo
  ports:
    - name: http
      port: 3200
      targetPort: 3200
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
    - name: otlp-http
      port: 4318
      targetPort: 4318
  type: ClusterIP
