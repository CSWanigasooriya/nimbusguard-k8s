apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  loki.yml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
      log_level: info

    common:
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    # Enhanced configuration for DQN log analysis
    limits_config:
      retention_period: 168h  # 7 days retention
      max_query_series: 10000
      max_query_parallelism: 32
      max_entries_limit_per_query: 10000
      max_streams_matchers_per_query: 10000

    # Add log-based metrics generation for DQN features
    ruler:
      storage:
        type: local
        local:
          directory: /tmp/loki/rules
      rule_path: /tmp/loki/rules
      alertmanager_url: http://prometheus.monitoring.svc.cluster.local:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true

    # Enable metrics for observability
    analytics:
      reporting_enabled: false

    # Enhanced tracing for better correlation
    tracing:
      enabled: true

    # Add metrics generation (this creates Prometheus metrics from logs)
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      max_transfer_retries: 0
      chunk_idle_period: 1h
      chunk_retain_period: 30s
      max_chunk_age: 1h

---
# Add LogQL recording rules for DQN features
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-rules
  namespace: monitoring
data:
  dqn-log-metrics.yml: |
    groups:
      - name: dqn_log_analysis
        interval: 30s
        rules:
          # Error frequency metrics for DQN
          - record: nimbusguard:error_log_frequency
            expr: |
              sum(rate({namespace="default"} |~ "(?i)(error|failed|exception)" [5m])) by (pod, app)

          # Critical error rate for DQN
          - record: nimbusguard:critical_error_rate
            expr: |
              sum(rate({namespace="default"} |~ "(?i)(critical|fatal|panic|oom)" [5m])) by (pod, app)

          # HTTP error patterns for DQN
          - record: nimbusguard:http_error_rate
            expr: |
              sum(rate({namespace="default"} |~ "(?i)(5[0-9]{2}|4[0-9]{2})" [5m])) by (pod, app)

          # Business transaction metrics for DQN
          - record: nimbusguard:transaction_error_rate
            expr: |
              sum(rate({namespace="default"} |~ "(?i)(transaction.*failed|order.*error|payment.*failed)" [5m])) by (pod, app)

          # User activity anomaly detection
          - record: nimbusguard:user_activity_rate
            expr: |
              sum(rate({namespace="default"} |~ "(?i)(user|login|session)" [5m])) by (pod, app)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3100"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          args:
            - '-config.file=/etc/loki/loki.yml'
          ports:
            - containerPort: 3100
              name: http
            - containerPort: 9096
              name: grpc
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
            - name: loki-rules
              mountPath: /tmp/loki/rules
            - name: loki-storage
              mountPath: /tmp/loki
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
          env:
            - name: JAEGER_AGENT_HOST
              value: tempo.monitoring.svc.cluster.local
            - name: JAEGER_AGENT_PORT
              value: "14268"
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-rules
          configMap:
            name: loki-rules
        - name: loki-storage
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3100"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: loki
  ports:
    - name: http
      port: 3100
      targetPort: 3100
    - name: grpc
      port: 9096
      targetPort: 9096
  type: ClusterIP